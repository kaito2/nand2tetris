// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl

/**
 * Computes the sum of three bits.
 */

CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    // Put you code here:
    /*
    // my answer...
    Not(in=a, out=nota);
    Not(in=b, out=notb);
    Not(in=c, out=notc);

    Xor(a=a, b=b, out=xors);
    Not(in=xors, out=notxors);
    And(a=c, b=notxors, out=tmps1);
    And(a=notc, b=xors, out=tmps2);
    Or(a=tmps1, b=tmps2, out=sum);

    And(a=c, b=a, out=tmpc1);
    And(a=c, b=b, out=tmpc2);
    And(a=a, b=b, out=tmpc3);
    Or(a=tmpc1, b=tmpc2, out=tmpcout);
    Or(a=tmpcout, b=tmpc3, out=carry);
    */
    // user half adder

    HalfAdder(a=a, b=b, sum=tmpsum, carry=tmpcarry1);
    HalfAdder(a=c, b=tmpsum, sum=sum, carry=tmpcarry2);
    Or(a=tmpcarry1, b=tmpcarry2, out=carry);

}